name: Release
on:
  workflow_dispatch:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies with pipenv
        run: pipenv install --dev

      - name: Install PyInstaller
        run: pipenv install pyinstaller

      - name: Build the application
        run: pipenv run pyinstaller --onefile --windowed --add-data demo.txt:. --add-data config.py:. --add-data fofa_map.py:. --add-data main.py:. --add-data utils.py:. --name update-tool tkinter_ui.py

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: update-tool
          path: dist/tkinter_ui

      - name: Install jq
        run: sudo apt-get install jq

      - name: Get version from version.json
        id: get_info
        run: |
          echo "version=$(node -p "require('./version.json').version")" >> $GITHUB_ENV

      - name: Get changelog
        id: get_changelog
        run: |
          changelog=$(sed -n '/## v'${{ env.version }}'/,/^## v/p' CHANGELOG.md | sed '/^## v'${{ env.version }}'/d' | sed -n '/###/,/^## v/p' | head -n -1)
          echo "changelog=$(echo "$changelog" | jq -R -s .)" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version }}
          release_name: v${{ env.version }}
          body: ${{ fromJSON(env.changelog) }}
          draft: false
          prerelease: false
